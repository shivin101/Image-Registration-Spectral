close all;
clear all;

% Choose Images to run the code on
img1 = imread('brain1.png');
img2 = imread('brain2.png');

% img1 = imresize(img1,0.3);
% img2 = imresize(img2,0.3);

% Storing the original images for reference 
im1 = img1;
im2 = img2;

%Calculate the Grayscale values of the image 
if size(img1,3)==3
    img1 = rgb2gray(img1);
    img2 = rgb2gray(img2);
end

%Subsample the image
subsampleRate = 6;
img1 = sample_img(img1,subsampleRate);
img2 = sample_img(img2,subsampleRate);

%Create the laplacian based on intensity and spatial regularization measure
lap1 = create_laplacian(img1);
lap2 = create_laplacian(img2);

%Define number of eigen vectors and values
K=4;

%Get EigenValues and EigenVectors for each laplacian
[eig1,vals1] = eigs(lap1,4);
[eig2,vals2] = eigs(lap2,4);

[X1,Y1] = meshgrid(1:size(img1,2),1:size(img1,1));
[X2,Y2] = meshgrid(1:size(img2,2),1:size(img2,1));

for i=1:K
    eig1(:,i)=eig1(:,i)-min(eig1(:,i));
    eig1(:,i)=eig1(:,i)/max(eig1(:,i))*255;
    mat_eig1{i}=griddata(X1(:)',',(eig1(:,i)),X1,Y1);
    mat_eig1{i}(isnan(mat_eig1{i}))=0;
end
for i=1:K
    eig2(:,i)=eig2(:,i)-min(eig2(:,i));
    eig2(:,i)=eig2(:,i)/max(eig2(:,i))*255;
    mat_eig2{i}=griddata(feat3(1,:)',feat3(2,:)',(eig2(:,i)),X2,Y2);
    mat_eig2{i}(isnan(mat_eig2{i}))=0;
end


